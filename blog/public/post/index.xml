<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    
    
    
    
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 UT</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Deploying blog using coreos docker and hugo</title>
      <link>http://localhost:1313/post/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UT</pubDate>
      
      <guid>http://localhost:1313/post/README/</guid>
      <description>

&lt;h4 id=&#34;docker-data-only-container:04c6e90faac2675aa89e2176d2eec7d8&#34;&gt;Docker data only container&lt;/h4&gt;

&lt;p&gt;At first we need data container with templates and content for blog generation.
I used next Dockerfile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FROM debian:jessie

RUN apt-get update &amp;amp;&amp;amp; apt-get install --no-install-recommends -y ca-certificates git-core
RUN apt-get clean &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
RUN git clone http://github.com/adilroot/adilnaimi.com.git /src
VOLUME [&amp;quot;/src/blog&amp;quot;]
WORKDIR /src
ENTRYPOINT [&amp;quot;git&amp;quot;]
CMD [&amp;quot;pull&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is no magic here: just clone repo to &lt;code&gt;/src&lt;/code&gt; (it will be used below),
and update it on container start.&lt;/p&gt;

&lt;p&gt;Build image:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker build -t blog/content .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create data container:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --name blog_content blog/content
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To update content and templates from github we need just:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker start blog_content
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;hugo:04c6e90faac2675aa89e2176d2eec7d8&#34;&gt;Hugo&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://hugo.spf13.com&#34;&gt;Hugo&lt;/a&gt; &amp;ndash; very fast static site generator, written in Go.&lt;/p&gt;

&lt;p&gt;Idea is to run hugo in docker container so it reads contents from one directory
and writes generated blog to another.&lt;/p&gt;

&lt;p&gt;Hugo dockerfile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FROM crosbymichael/golang

#FROM golang:1.3-onbuild

RUN apt-get update &amp;amp;&amp;amp; apt-get install --no-install-recommends -y bzr

RUN go get github.com/spf13/hugo

VOLUME [&amp;quot;/var/www/blog&amp;quot;]

ENTRYPOINT [&amp;quot;hugo&amp;quot;]
CMD [&amp;quot;-w&amp;quot;, &amp;quot;-s&amp;quot;, &amp;quot;/src/blog&amp;quot;, &amp;quot;-d&amp;quot;, &amp;quot;/var/www/blog&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, here we &lt;code&gt;go get&lt;/code&gt; hugo and use /src/blog (remember this from content container?)
as source directory for it and &lt;code&gt;/var/www/blog&lt;/code&gt; as destination.&lt;/p&gt;

&lt;p&gt;Now build image and run container with hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker build -t blog/hugo .
docker run --name blog --volumes-from blog_content blog/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here the trick with
&lt;a href=&#34;http://docs.docker.io/use/working_with_volumes/&#34;&gt;&lt;code&gt;--volumes-from&lt;/code&gt;&lt;/a&gt; &amp;ndash; we used
&lt;code&gt;/src/blog&lt;/code&gt; from &lt;code&gt;blog_content&lt;/code&gt; container, and yeah, we&amp;rsquo;re going to use
&lt;code&gt;/var/www/blog&lt;/code&gt; from &lt;code&gt;blog&lt;/code&gt; container.&lt;/p&gt;

&lt;h4 id=&#34;nginx:04c6e90faac2675aa89e2176d2eec7d8&#34;&gt;Nginx&lt;/h4&gt;

&lt;p&gt;So, now we have container with templates and content &lt;code&gt;blog_content&lt;/code&gt;, content
with ready to use blog &lt;code&gt;blog&lt;/code&gt;, it&amp;rsquo;s time to show this blog to the world.&lt;/p&gt;

&lt;p&gt;I write simple config for nginx:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server {
    listen 80;
    server_name adilnaimi.com;
    location / {
        root /var/www/blog;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Put it to sites-enabled directory, which used in this pretty dockerfile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FROM dockerfile/nginx

ADD sites-enabled /etc/nginx/sites-enabled/default
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build image and run container with nginx:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker build -t blog/nginx .
docker run -p 80:80 -d --name=nginx --volumes-from=blog blog/nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it, now blog is running on &lt;a href=&#34;http://adilnaimi.com&#34;&gt;adilnaimi.com&lt;/a&gt; and
you can read it :) I can update it just with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker start blog_content
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>